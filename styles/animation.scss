* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    list-style: none;
}

:root {
    --color-primary: rgb(32, 31, 31);
    --color-white: rgb(240, 242, 236);
    --color-gray: rgb(88, 88, 86);
    --color-light-gray: rgb(130, 127, 127);
    --color-green: rgb(33, 132, 33);

    --transition-ens: all .4s ease-in-out;

    --box-shadow-1: 0 3px 15px rgba(0, 0, 0, .3);
}

body {
    // from google fonts
    font-family: 'Poppins', sans-serif;
    background-color: var(--color-primary);
    // background:  linear-gradient(to left, rgb(72, 69, 69), rgb(1, 46, 46) 10%, rgb(71, 68, 68), rgb(8, 53, 98)); // this won't work bz body has no height, must add height:100vh for gridient to show
    font-size: 1.1rem;
    color: var(--color-white);
    transition: var(--transition-ens);
}

// to remove a's default color and font from browser
a {
    font-family: inherit;
    color: inherit;
    text-decoration: none;
}

// header takes full height of the screen, background is an image
header {
    min-height: 100vh;
    color: var(--color-white);
    overflow: hidden;

    .header-content {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        height: 100%;
        position: absolute;

        .left-header {
            // to center the image div
            display: flex;
            align-items: center;
            justify-content: center;
            position:  relative;
            .h-shape {
                height: 100%;
                position: absolute;
                background-color: var(--color-green);
                top: 0;
                left: 0;
                width: 65%;
                z-index: -1;
                clip-path: polygon(0 0, 45% 0%, 100% 100%, 0% 100%);
            }

            .image {
                background-color: rgb(56, 54, 54);
                height: 90%;
                width: 65%;
                margin-left: 10%;
                border-radius: 14px;

                img {
                    width: 100%;
                    height: 100%;
                    object-fit: cover;
                    filter: grayscale(100%);
                    transition: var(--transition-ens);

                    &:hover {
                        filter: none;
                    }

                }
            }
        }

        .right-header {
            padding-right: 15%;
            display: flex;
            justify-content: center;
            flex-direction: column;
            .name{
                color:var(--color-green);
            }
            p{
                margin: 1.5rem 0;
            }
            
        }
    }
}

section {
    position: absolute;
    min-height: 100vh;
    width: 100%;
    left: 0;
    top: 0;

    // padding: 3rem, 18rem; // TODO:how this padding can be shown if each section is taking full screen space and triggered only by one relative button?
}

// .section include all section tags and header tag, they need to be hidden at the beginning
.section {
    transform: translateY(-100%) scale(0);
    display: none;
    //transition: var(--transition-ens); // removed bz body tag has this defined
}

// btns fixed on the right border
.controls {
    // set btns to fixed at right center
    position: fixed;
    right: 3%;
    top: 50%;
    transform: translateY(-50%);
    // align its btns using flex
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    z-index: 10;

    // style active-btn, this class will rotate by clicking among all the icons
    .active-btn {
        background-color: var(--color-green) !important; //important help prioritize this choice over .control class
        transition: var(--transition-ens);

        i {
            color: var(--color-white) !important;
        }
    }

    // for styling every single icon in the divs
    .control {
        background-color: var(--color-gray);
        padding: 1rem;
        cursor: pointer;
        // to make all icons same size background
        width: 55px;
        height: 55px;
        border-radius: 50%;
        // center content
        text-align: center;
        align-content: center;
        // space out each icon
        margin: .7rem 0;
        box-shadow: var(--box-shadow-1);

        //enlarge the icon size, 
        i {
            font-size: 1.2rem;
            // pointer-events: none; // only parent <div> is event.target
            color: var(--color-light-gray);
        }
    }
}

.active {
    display: block;
    animation: pageShow 1s ease-out forwards;

    @keyframes pageShow {
        0% {
            transform: translateY(-100%) scaleY(0);
        }

        100% {
            transform: none;
        }
    }
}

// style these seperately outside of any parent tags for reuse
.main-btn {
       border-radius: 30px;
       border: solid 1px var(--color-green);    
       display:flex;
       align-items: center;
       align-self: flex-start; // this removed extra right empty space.
       position: relative;
       overflow: hidden; // without this the animation is wrong with the overflow part seen from the start of the animation.
       .btn-text {
        padding: 0 2rem;
       }
       .btn-icon {
        border-radius: 50%;
        background-color: var(--color-green);
        padding: 1rem;
        display: flex;
        align-items: center;
        justify-content: center;
       }
       &::before {
        content: '';
        position:absolute;
        transform: translateX(100%);
        transition: all 2s ease-out;
        z-index: -1;
        // top: 0;
        // right: 0;
       }
       &:hover::before {
        // cursor: pointer;
        transform: translateX(0);        
        width: 100%;
        height: 100%;        
        background-color: var(--color-green);
       }

}